local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Sync = require(ReplicatedStorage.Database.Sync)

local Boxes = {}
for x,v in Sync.MysteryBox do
    table.insert(Boxes, v.Name)
end

local function GetContents(name)
    for x,v in Sync.MysteryBox do
        if v.Name == name then
            local Contents = {}
            for m,n in v.Contents do
                table.insert(Contents, Sync.Item[n]["ItemName"])
            end
            return Contents
        end
    end
end

local function Fetch(Box, Content)
    for x,v in Sync.MysteryBox do
        if v.Name == Box then
            for m,n in v.Contents do
                if Sync.Item[n]["ItemName"] == Content then
                    return x, n
                end
            end
        end
    end
end

local ArrayField = loadstring(game:HttpGet("https://raw.githubusercontent.com/UI-Interface/ArrayField/main/Source.lua"))()
local Window = ArrayField:CreateWindow({
    Name = "MM2 - Unbox",
    LoadingTitle = "Made by Gothboiclique",
    LoadingSubtitle = "Made by Gothboiclique",
    KeySettings = {}
})

local Tab = Window:CreateTab("Unbox")
local ContentDropdown
local BoxDropdown

local Box
local Content

BoxDropdown = Tab:CreateDropdown({
   Name = "Box",
   Options = Boxes,
   CurrentOption = "",
   Callback = function(value)
       local Contents = GetContents(value)
       ContentDropdown:Refresh(Contents, "")
       Box = value
       Content = nil
   end
})

ContentDropdown = Tab:CreateDropdown({
   Name = "Content",
   Options = {},
   CurrentOption = "",
   Callback = function(value)
       Content = value
   end
})

Tab:CreateButton({
   Name = "Unbox",
   Interact = "Tap",
   Callback = function()
       if Box and Content then
           local Box, Content = Fetch(Box, Content)
           ReplicatedStorage.Remotes.Shop.BoxController:Fire(Box, Content)
       end
   end
})
